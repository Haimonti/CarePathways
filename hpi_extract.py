# -*- coding: utf-8 -*-
"""HPI extract

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1DAj6AYxuWMZdKOU570c1W_EctvCI9UHf
"""

import pandas as pd
import re

notes_df = pd.read_csv("/content/drive/MyDrive/research/discharge.csv")
df_other = pd.read_csv("/content/drive/MyDrive/research/physical_icd_medfreq-3.csv")

valid_subjects = df_other['subject_id'].unique()
notes_df = notes_df[notes_df['subject_id'].isin(valid_subjects)].copy()

print("Number of unique subjects after filtering:", notes_df['subject_id'].nunique())
print("Filtered rows:", len(notes_df))

# HPI extraction function
# case 1 hpi section doesn't exist so return NA
# case 2 end point doesn't exist to take next 200 words
# case 3 everything exist so take everything
def extract_hpi(note_text, max_words=200, end_patterns=(r'PAST MEDICAL HISTORY', r'PMH')):
    if not isinstance(note_text, str) or not note_text.strip():
        return "NA"
    start_headers = (
        r'HISTORY OF PRESENT ILLNESS',
        r'HISTORY OF PRESENTING ILLNESS',
        r'HPI',
    )
    start_regex = rf'\b(?:{"|".join(start_headers)})\s*[:\-–—\.]?\s*'

    start = re.search(start_regex, note_text, flags=re.IGNORECASE)
    if not start:
        return "NA"

    start_idx = start.end()
    tail = note_text[start_idx:]

    end_regex = '|'.join(fr'\b{p}\b\s*[:\-–—\.]?\s*' for p in end_patterns)
    m = re.search(end_regex, tail, flags=re.IGNORECASE)
    end_idx = (start_idx + m.start()) if m else None

    if end_idx is not None:
        # case 3
        segment = note_text[start_idx:end_idx]
    else:
        # case 2
        words = re.findall(r'\S+', tail)
        segment = ' '.join(words[:max_words])

    segment = re.sub(start_regex, '', segment, flags=re.IGNORECASE)

    # handling lowercase and whitespace
    segment = re.sub(r'\s+', ' ', segment).strip()
    return segment.lower() if segment else "NA"


notes_df['hpi'] = notes_df['text'].apply(lambda t: extract_hpi(t, max_words=200))

out_path = "/content/drive/MyDrive/research/hpi_Extract.csv"
notes_df[['subject_id', 'hadm_id', 'hpi']].to_csv(out_path, index=False)

print("Saved:", out_path)
print("Rows written:", len(notes_df))
print("NA rate:", (notes_df['hpi'] == "NA").mean())