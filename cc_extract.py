# -*- coding: utf-8 -*-
"""CC extract

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1DAj6AYxuWMZdKOU570c1W_EctvCI9UHf
"""

import pandas as pd
import re


notes_df = pd.read_csv("/content/drive/MyDrive/research/discharge.csv")
df_other = pd.read_csv("/content/drive/MyDrive/research/physical_icd_medfreq-2.csv")

valid_subjects = df_other['subject_id'].unique()
notes_df = notes_df[notes_df['subject_id'].isin(valid_subjects)].copy()
print("Number of subjects before filtering:", notes_df['subject_id'].nunique())
print("Number of subjects after filtering:", notes_df['subject_id'].isin(valid_subjects).sum())


# cc extraction function
# case 1 cc doesn't exist
# case 2 end point doesnt exist so take the next 50 words
# case 3 everything exist so take the section
def extract_chief_complaint(note_text):
    if not isinstance(note_text, str) or not note_text.strip():
        return "NA"

    text = note_text.upper()

    start_match = re.search(r'\b(CHIEF COMPLAINT|CC):?', text)
    if not start_match:
        return "NA"

    start_idx = start_match.end()

    end_match = re.search(r'MAJOR SURGICAL OR INVASIVE PROCEDURE:', text[start_idx:])
    if end_match:
        end_idx = start_idx + end_match.start()         # case 3
        complaint = text[start_idx:end_idx].strip()
    else:
        words = text[start_idx:].strip().split()        # case 2
        complaint = ' '.join(words[:50])


    complaint = re.sub(r'\b(CHIEF COMPLAINT|CC):?', '', complaint).strip()
    return complaint


notes_df['chief_complaint'] = notes_df['text'].apply(extract_chief_complaint)

print("number of unique subjects",notes_df['subject_id'].nunique())

notes_df[['subject_id', 'hadm_id', 'chief_complaint']].to_csv("chief_complaint-3.csv", index=False)